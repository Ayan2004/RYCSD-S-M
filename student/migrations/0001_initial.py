# Generated by Django 4.2.4 on 2023-09-18 19:40

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('Duration', models.CharField(blank=True, default='Months', max_length=50, null=True)),
                ('Eligibility', models.CharField(blank=True, max_length=50, null=True)),
                ('Course_Fees', models.IntegerField(blank=True, null=True)),
                ('Admission_Fee', models.IntegerField(blank=True, null=True)),
                ('Fees_Structure', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField()),
                ('Purpose', models.TextField()),
                ('P_method', models.CharField(choices=[('Cash', 'Cash'), ('Bank', 'Bank')], max_length=20)),
                ('Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Photo', models.ImageField(blank=True, default='default.png', null=True, upload_to='images')),
                ('Name', models.CharField(max_length=200)),
                ('Enrollment_No', models.CharField(blank=True, max_length=10, null=True)),
                ('DOB', models.DateField(blank=True, null=True)),
                ('Gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('Caste', models.CharField(blank=True, choices=[('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC')], max_length=20, null=True)),
                ('Father_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Mother_Name', models.CharField(blank=True, max_length=200, null=True)),
                ('Contact_No', models.CharField(blank=True, max_length=10, null=True)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('District', models.CharField(blank=True, max_length=20, null=True)),
                ('Address', models.TextField(blank=True, null=True)),
                ('Highest_Qualification', models.CharField(blank=True, max_length=30, null=True)),
                ('Name_Of_School', models.CharField(blank=True, max_length=50, null=True)),
                ('Name_Of_Board', models.CharField(blank=True, max_length=50, null=True)),
                ('Year_Of_Pass', models.CharField(blank=True, max_length=10, null=True)),
                ('Marks_Obtained', models.CharField(blank=True, max_length=10, null=True)),
                ('Total_Fees', models.IntegerField(blank=True, null=True)),
                ('Date_Of_Admission', models.DateField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('Course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student.courses')),
            ],
        ),
        migrations.CreateModel(
            name='Fees_Show',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Remarks', models.CharField(blank=True, choices=[('Admission Fee', 'Admission Fee'), ('1st Installment', '1st Installment'), ('2nd Installment', '2nd Installment'), ('3rd Installment', '3rd Installment'), ('4th Installment', '4th Installment'), ('5th Installment', '5th Installment'), ('6th Installment', '6th Installment'), ('7th Installment', '7th Installment'), ('8th Installment', '8th Installment'), ('9th Installment', '9th Installment'), ('10th Installment', '10th Installment'), ('11th Installment', '11th Installment'), ('12th Installment', '12th Installment')], max_length=50, null=True)),
                ('Amount', models.IntegerField(blank=True, null=True)),
                ('Emi_Payment_Date', models.DateField(blank=True, null=True)),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Fees_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Emi', models.IntegerField(blank=True, null=True)),
                ('Date', models.DateField(blank=True, null=True)),
                ('Status', models.CharField(choices=[('Paid', 'Paid'), ('partially Paid', 'Partially Paid')], max_length=50)),
                ('Remarks', models.CharField(blank=True, choices=[('Admission Fee', 'Admission Fee'), ('1st Installment', '1st Installment'), ('2nd Installment', '2nd Installment'), ('3rd Installment', '3rd Installment'), ('4th Installment', '4th Installment'), ('5th Installment', '5th Installment'), ('6th Installment', '6th Installment'), ('7th Installment', '7th Installment'), ('8th Installment', '8th Installment'), ('9th Installment', '9th Installment'), ('10th Installment', '10th Installment'), ('11th Installment', '11th Installment'), ('12th Installment', '12th Installment')], max_length=50, null=True)),
                ('Receiver', models.CharField(blank=True, choices=[('Somnath Chattejee', 'Somnath Chattejee'), ('Ayan Dhali', 'Ayan Dhali')], max_length=50, null=True)),
                ('Due', models.IntegerField(blank=True, null=True)),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Enquries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=60, null=True)),
                ('Address', models.TextField(blank=True, null=True)),
                ('Mobile_No', models.CharField(blank=True, max_length=10, null=True)),
                ('Whatsapp_No', models.CharField(blank=True, max_length=10, null=True)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('Remarks', models.TextField(blank=True, null=True)),
                ('Date', models.DateField(auto_now_add=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('Course_Interest', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student.courses')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_id', models.IntegerField(default=1)),
                ('Balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('Transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='student.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='MyStudent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('student.student',),
        ),
    ]
